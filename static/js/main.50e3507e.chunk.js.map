{"version":3,"sources":["video/masthead-bg.mp4","domain/Main/useControl.ts","domain/Timer/useTimer.ts","components/Button/styles.ts","components/Button/index.tsx","domain/Timer/styles.ts","domain/Timer/index.tsx","components/Input/styles.ts","components/Input/index.tsx","domain/Main/Mainstyles.ts","domain/Main/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","controlReducer","state","action","type","fieldName","payload","error","disabled","startTimer","timerSpeed","inputValue","initialState","timerReducer","pause","resume","halfWayEnd","redText","blink","status","Container","styled","button","darken","Button","children","rest","TimerContainer","div","TimerNumbers","span","props","textColor","css","blinking","speed","Timer","timer","className","useState","minutes","setMinutes","seconds","setSeconds","useReducer","dispatch","handleHalfWay","useCallback","halfMinute","odd","toString","match","Math","floor","everySecondCB","useTimer","useEffect","everySecond","setInterval","clearInterval","data-testid","id","size","onClick","Input","Icon","icon","labelText","htmlFor","Header","header","Main","main","SpeedButtons","App","useControl","handleStartTimer","isNumber","onlyZeros","handleFormatValue","inputNumber","replace","loop","autoPlay","muted","src","VideoBG","place","effect","color","value","onChange","e","target","placeholder","data-tip","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e3507e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/masthead-bg.90b4e40a.mp4\";","import { useReducer, Dispatch } from 'react';\r\n\r\ninterface useControlProps {\r\n  state: controlState;\r\n  dispatch: Dispatch<controlAction>;\r\n}\r\n\r\ninterface controlState {\r\n  inputValue: string;\r\n  timerSpeed: number;\r\n  disabled: boolean;\r\n  startTimer: boolean;\r\n  error: boolean;\r\n}\r\n\r\ntype controlAction =\r\n  | { type: 'start' | 'restart' | 'error' }\r\n  | { type: 'field'; fieldName: string; payload: string | number | boolean };\r\n\r\nfunction controlReducer(\r\n  state: controlState,\r\n  action: controlAction,\r\n): controlState {\r\n  switch (action.type) {\r\n    case 'field': {\r\n      return {\r\n        ...state,\r\n        [action.fieldName]: action.payload,\r\n      };\r\n    }\r\n    case 'start': {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        disabled: true,\r\n        startTimer: true,\r\n      };\r\n    }\r\n    case 'restart': {\r\n      return {\r\n        ...state,\r\n        timerSpeed: 1.0,\r\n        disabled: false,\r\n        startTimer: false,\r\n        inputValue: '',\r\n        error: false,\r\n      };\r\n    }\r\n    case 'error': {\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        inputValue: '',\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialState: controlState = {\r\n  inputValue: '',\r\n  timerSpeed: 1.0,\r\n  disabled: false,\r\n  startTimer: false,\r\n  error: false,\r\n};\r\n\r\nexport const useControl = (): useControlProps => {\r\n  const [state, dispatch] = useReducer(controlReducer, initialState);\r\n\r\n  return { state, dispatch };\r\n};\r\n","import { useState, useCallback, useReducer, Dispatch } from 'react';\r\n\r\ninterface useTimerReturn {\r\n  minutes: number;\r\n  seconds: number;\r\n  state: timerState;\r\n  dispatch: Dispatch<timerAction>;\r\n  everySecondCB(): void;\r\n}\r\n\r\ninterface timerState {\r\n  status: boolean;\r\n  redText: boolean;\r\n  blink: boolean;\r\n  pause: boolean;\r\n  resume: boolean;\r\n  halfWayEnd: boolean;\r\n}\r\n\r\ntype timerAction = {\r\n  type:\r\n    | 'middle'\r\n    | 'red_text'\r\n    | 'blink'\r\n    | 'pause'\r\n    | 'resume'\r\n    | 'clear_pause'\r\n    | 'clear_resume'\r\n    | 'end';\r\n};\r\n\r\nfunction timerReducer(state: timerState, action: timerAction): timerState {\r\n  switch (action.type) {\r\n    case 'pause':\r\n      return {\r\n        ...state,\r\n        pause: true,\r\n      };\r\n    case 'resume':\r\n      return {\r\n        ...state,\r\n        resume: true,\r\n      };\r\n    case 'middle':\r\n      return {\r\n        ...state,\r\n        halfWayEnd: true,\r\n      };\r\n    case 'red_text':\r\n      return {\r\n        ...state,\r\n        redText: true,\r\n      };\r\n    case 'blink':\r\n      return {\r\n        ...state,\r\n        blink: true,\r\n      };\r\n    case 'clear_pause':\r\n      return {\r\n        ...state,\r\n        pause: false,\r\n      };\r\n    case 'clear_resume':\r\n      return {\r\n        ...state,\r\n        resume: false,\r\n      };\r\n    case 'end':\r\n      return {\r\n        ...state,\r\n        blink: false,\r\n        redText: false,\r\n        status: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialState: timerState = {\r\n  status: true,\r\n  redText: false,\r\n  blink: false,\r\n  pause: false,\r\n  resume: false,\r\n  halfWayEnd: false,\r\n};\r\n\r\nexport const useTimer = (timer: number): useTimerReturn => {\r\n  const [minutes, setMinutes] = useState(timer);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [state, dispatch] = useReducer(timerReducer, initialState);\r\n\r\n  const handleHalfWay = useCallback(() => {\r\n    // if number / 2 === float number it means that is odd\r\n    const halfMinute = timer / 2;\r\n    const odd = halfMinute.toString().match(/^\\d{1,2}\\.\\d/);\r\n\r\n    // if the number is even\r\n    if (!odd && minutes === halfMinute && seconds === 1) {\r\n      dispatch({ type: 'middle' });\r\n    }\r\n\r\n    // if the number is odd\r\n    if (odd && minutes === Math.floor(halfMinute) && seconds === 31) {\r\n      dispatch({ type: 'middle' });\r\n    }\r\n  }, [minutes, seconds, timer]);\r\n\r\n  const everySecondCB = useCallback(() => {\r\n    // decreases one second if seconds > 0\r\n    if (seconds > 0) {\r\n      setSeconds(seconds - 1);\r\n    }\r\n\r\n    // see if is on halfway;\r\n    handleHalfWay();\r\n\r\n    // if sec equal to 0 and minutes > 0 then keep doing the logic\r\n    if (seconds === 0) {\r\n      if (minutes > 0) {\r\n        setSeconds(59);\r\n        setMinutes(minutes - 1);\r\n      }\r\n    }\r\n  }, [handleHalfWay, minutes, seconds]);\r\n\r\n  return { state, dispatch, minutes, seconds, everySecondCB };\r\n};\r\n","import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const Container = styled.button`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  color: black;\r\n  background: var(--button-color);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  padding: 0.75em 1.25em;\r\n  border-radius: 0.25em;\r\n  transition: background-color 0.5s;\r\n\r\n  & + button {\r\n    margin-left: 1em;\r\n  }\r\n\r\n  &:hover {\r\n    background: ${darken(0.1, '#009FB7')};\r\n  }\r\n`;\r\n","import React, { ButtonHTMLAttributes } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\r\n  <Container type=\"button\" {...rest}>\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nexport default Button;\r\n","import styled, { css } from 'styled-components';\r\n\r\ninterface TimerNumbersProps {\r\n  textColor: boolean;\r\n  blinking: boolean;\r\n  speed: number;\r\n}\r\n\r\nexport const TimerContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  p.halfWayEnd {\r\n    font-size: 1.5rem;\r\n    color: var(--bg-contrast-error-color);\r\n  }\r\n\r\n  button {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    padding: 0.15rem;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport const TimerNumbers = styled.span<TimerNumbersProps>`\r\n  ${(props) =>\r\n    props.textColor &&\r\n    css`\r\n      color: var(--red-contrast-error-twenty);\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.blinking &&\r\n    css`\r\n      animation: blink ${1 / props.speed}s linear infinite;\r\n    `}\r\n\r\n  @keyframes blink {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { FiPause, FiSkipForward } from 'react-icons/fi';\r\nimport { useTimer } from './useTimer';\r\n\r\nimport Button from '../../components/Button';\r\n\r\nimport { TimerContainer, TimerNumbers } from './styles';\r\n\r\ninterface TimerProps {\r\n  timer: number;\r\n  speed: number;\r\n  className?: string;\r\n}\r\n\r\nconst Timer: React.FC<TimerProps> = ({ timer, speed, className }) => {\r\n  const { minutes, seconds, everySecondCB, state, dispatch } = useTimer(timer);\r\n\r\n  const { blink, halfWayEnd, pause, resume, redText, status } = state;\r\n\r\n  useEffect((): (() => void) => {\r\n    // creates the loop based on minutes:seconds\r\n    let everySecond = setInterval(() => everySecondCB(), 1000 / speed);\r\n\r\n    // if minutes === 0\r\n    // and seconds === 20 set red color\r\n    // and seconds === 0 set red color\r\n    if (minutes === 0) {\r\n      if (seconds === 20) {\r\n        dispatch({ type: 'red_text' });\r\n      }\r\n      if (seconds === 10) {\r\n        dispatch({ type: 'blink' });\r\n      }\r\n    }\r\n\r\n    // if pause is set to true, then clear the interval\r\n    if (pause) {\r\n      clearInterval(everySecond);\r\n    }\r\n\r\n    // if resume is set to true, then pause is no more,\r\n    // then restart the loop and resets resume variable, because no more resuming.\r\n    if (resume) {\r\n      dispatch({ type: 'clear_pause' });\r\n      everySecond = setInterval(() => everySecondCB(), 1000 / speed);\r\n      dispatch({ type: 'clear_resume' });\r\n    }\r\n\r\n    // if ends (sec && min equal to 0) then clear any effect plus interval\r\n    if (seconds === 0 && minutes === 0) {\r\n      dispatch({ type: 'end' });\r\n      clearInterval(everySecond);\r\n    }\r\n\r\n    // clear the timeout to avoid memory leaks\r\n    return function cleanup(): void {\r\n      clearInterval(everySecond);\r\n    };\r\n  }, [dispatch, everySecondCB, minutes, pause, resume, seconds, speed]);\r\n\r\n  return (\r\n    <TimerContainer data-testid=\"timerEl\" className={className}>\r\n      {halfWayEnd && (\r\n        <p className=\"halfWayEnd\">\r\n          {status ? 'More than half way there!' : \"Time's Up!\"}\r\n        </p>\r\n      )}\r\n      <TimerNumbers textColor={redText} blinking={blink} speed={speed}>\r\n        {`${minutes < 10 ? `0${minutes}` : minutes}:${\r\n          seconds < 10 ? `0${seconds}` : seconds\r\n        }`}\r\n      </TimerNumbers>\r\n      <Button id=\"pauseResumeButton\">\r\n        {!pause ? (\r\n          <FiPause size={45} onClick={() => dispatch({ type: 'pause' })} />\r\n        ) : (\r\n          <FiSkipForward\r\n            size={45}\r\n            onClick={() => dispatch({ type: 'resume' })}\r\n          />\r\n        )}\r\n      </Button>\r\n    </TimerContainer>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  label {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    input {\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      text-align: center;\r\n      color: var(--bg-color);\r\n\r\n      width: 100%;\r\n      padding: 0.5rem;\r\n      border: none;\r\n      border-radius: 0.45em;\r\n\r\n      &::placeholder {\r\n        font-size: 1.2rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { InputHTMLAttributes } from 'react';\r\nimport { IconBaseProps } from 'react-icons';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  id?: string;\r\n  labelText?: string;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ icon: Icon, disabled, ...rest }) => {\r\n  const { id, labelText } = rest;\r\n  return (\r\n    <Container>\r\n      {Icon && <Icon size={30} />}\r\n      <label htmlFor={id}>\r\n        {labelText ? `${labelText}:` : ''}\r\n        <input\r\n          data-testid=\"inputEl\"\r\n          disabled={disabled}\r\n          {...rest}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  svg.logo {\r\n    padding: 1em;\r\n  }\r\n\r\n  h1 {\r\n    color: #000000;\r\n    font-weight: 700;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    div {\r\n      width: 55%;\r\n      margin-right: 0.45rem;\r\n    }\r\n\r\n    button {\r\n      width: 15%;\r\n      padding: 0.4rem;\r\n      border-radius: 0.45em;\r\n\r\n      & + button {\r\n        margin-left: 0.45rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  span.errorStyle {\r\n    font-size: 1.5rem;\r\n    color: var(--red-contrast-error-twenty);\r\n\r\n    padding: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 2rem;\r\n\r\n  span {\r\n    font-family: 'SevenSegment';\r\n    font-size: 10rem;\r\n    padding: 0 1rem 1rem;\r\n    \r\n  }\r\n`;\r\n\r\nexport const SpeedButtons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  button {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { FiPlay, FiClock, FiRotateCcw } from 'react-icons/fi';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { useControl } from './useControl';\r\nimport VideoBG from \"../../video/masthead-bg.mp4\";\r\nimport Timer from '../Timer';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { Header, Main, SpeedButtons } from './Mainstyles';\r\n\r\nconst App: React.FC = () => {\r\n  const { state, dispatch } = useControl();\r\n  const { inputValue, timerSpeed, disabled, startTimer, error } = state;\r\n\r\n  const handleStartTimer = useCallback((): void => {\r\n    const isNumber = inputValue.match(/^\\d{1,2}$/);\r\n\r\n    const onlyZeros = inputValue.match(/^0{1,2}$/);\r\n \r\n\r\n    if (!isNumber || onlyZeros) {\r\n      dispatch({ type: 'error' });\r\n    } else {\r\n      dispatch({ type: 'start' });\r\n    }\r\n  }, [dispatch, inputValue]);\r\n\r\n  const handleFormatValue = useCallback((inputNumber: string): number => {\r\n    // remove any leading zeros\r\n    const formatedValue = inputNumber.replace(/^0+/g, '');\r\n\r\n    // and give back the string transformed in number\r\n    return +formatedValue;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <video className=\"Video\" loop autoPlay muted\r\n  >\r\n \r\n        <source\r\n          src={VideoBG}\r\n          type=\"video/mp4\"\r\n          \r\n        />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      {/** Component for rendering the tooltips */}\r\n      <ReactTooltip place=\"bottom\" effect=\"solid\" />\r\n      <Header>\r\n        <FiClock className=\"logo\" size={155} color=\"#000000\" />\r\n        <h1>Countdown Timer</h1>\r\n        <form>\r\n          {/** Component for getting user input */}\r\n          <Input\r\n            value={inputValue}\r\n            onChange={(e) =>\r\n              dispatch({\r\n                type: 'field',\r\n                fieldName: 'inputValue',\r\n                payload: e.target.value,\r\n              })\r\n            }\r\n            placeholder=\"Please type a minute\"\r\n            disabled={disabled}\r\n          />\r\n\r\n          {/** Component for starting the timer */}\r\n          <Button\r\n            data-testid=\"startButtonEl\"\r\n            data-tip=\"Start\"\r\n            onClick={() => handleStartTimer()}\r\n          >\r\n            <FiPlay size={35} />\r\n          </Button>\r\n\r\n          {/** Component for restarting the timer */}\r\n          <Button\r\n            data-tip=\"Reset\"\r\n            onClick={() => dispatch({ type: 'restart' })}\r\n          >\r\n            <FiRotateCcw size={35} />\r\n          </Button>\r\n        </form>\r\n        {/** Error html that will be rendered with input is invalid */}\r\n        {error && (\r\n          <span className=\"errorStyle\">\r\n            Please insert a number in MM or M and higher than 0.\r\n          </span>\r\n        )}\r\n      </Header>\r\n      <Main>\r\n        {/** Component for the timer itself */}\r\n        {startTimer ? (\r\n          <Timer\r\n            className=\"timer\"\r\n            timer={handleFormatValue(inputValue)}\r\n            speed={timerSpeed}\r\n          />\r\n        ) : (\r\n          <span>00:00</span>\r\n        )}\r\n      </Main>\r\n\r\n      {/** Each speed button the timer */}\r\n      <SpeedButtons>\r\n        <Button\r\n          data-tip=\"Increase speed by 1.0\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'field',\r\n              fieldName: 'timerSpeed',\r\n              payload: 1.0,\r\n            })\r\n          }\r\n        >\r\n          1.0x\r\n        </Button>\r\n        <Button\r\n          data-tip=\"Increase speed by 1.5\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'field',\r\n              fieldName: 'timerSpeed',\r\n              payload: 1.5,\r\n            })\r\n          }\r\n        >\r\n          1.5x\r\n        </Button>\r\n        <Button\r\n          data-tip=\"Increase speed by 2.0\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'field',\r\n              fieldName: 'timerSpeed',\r\n              payload: 2.0,\r\n            })\r\n          }\r\n        >\r\n          2.0x\r\n        </Button>\r\n      </SpeedButtons>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  :root {\r\n    /**CSS vars */\r\n    --bg-color: #696773;\r\n    --font-color: #eff1f3;\r\n    --button-color: #009FB7;\r\n    --bg-contrast-error-color: #7FBB8F;\r\n    --red-contrast-error-twenty: #870909;\r\n\r\n    /**Font reinforcement */\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: 0;\r\n  }\r\n\r\n  body {\r\n    background: var(--bg-color);\r\n    color: var(--font-color);\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button, span, p {\r\n    font-family: 'Roboto Slab', serif;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport Main from './domain/Main';\r\n\r\n// for global css with styled-components\r\nimport GlobalStyle from './styles/global';\r\n\r\n// for global css that don't work in styled (@font-face for seven segment)\r\nimport './styles/global.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n  \r\n\r\n      <GlobalStyle />\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}